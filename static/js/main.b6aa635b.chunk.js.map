{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortByType","type","reset","this","showResetButton","reorderedGoods","goods","visibleGoods","sort","prevGood","currGood","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","className","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,WAAa,SAACC,GACZ,EAAKF,SAAS,CAAEH,SAAUK,KAb9B,EAgBEC,MAAQ,WACN,EAAKF,WAAWT,EAASM,MACzB,EAAKE,SAAS,CAAEJ,YAAY,KAlBhC,4CAqBE,WAAU,IAAD,OACP,EAAiCQ,KAAKT,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdQ,EAAkBR,IAAaL,EAASM,MAAQF,EAChDU,EAvDH,SACLC,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENY,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAUC,GAC3B,OAAQd,GACN,KAAKL,EAASoB,SACZ,OAAOF,EAASG,cAAcF,GAEhC,KAAKnB,EAASsB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OAEpC,QACE,OAAO,MAITnB,GACFY,EAAaT,UAGRS,EAgCkBQ,CACrBvB,EAAiBW,KAAKT,OAGxB,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEf,KAAK,SACLe,UAAWC,IACT,iBAAkB,CAChB,WAAYrB,IAAaL,EAASoB,WAGtCO,QAAS,WACP,EAAKlB,WAAWT,EAASoB,WAR7B,iCAcA,wBACEV,KAAK,SACLe,UAAWC,IACT,oBAAqB,CACnB,WAAYrB,IAAaL,EAASsB,SAGtCK,QAAS,WACP,EAAKlB,WAAWT,EAASsB,SAR7B,4BAcA,wBACEZ,KAAK,SACLe,UAAWC,IACT,oBAAqB,CACnB,YAAatB,IAGjBuB,QAAS,WACP,EAAKpB,WART,qBAcCM,GACC,wBACEH,KAAK,SACLe,UAAU,4BACVE,QAAS,WACP,EAAKhB,SAJT,sBAYJ,6BACE,6BAEIG,EAAec,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBA1FxC,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b6aa635b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prevGood, currGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return prevGood.localeCompare(currGood);\n\n      case SortType.LENGTH:\n        return prevGood.length - currGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByType = (type: SortType) => {\n    this.setState({ sortType: type });\n  };\n\n  reset = () => {\n    this.sortByType(SortType.NONE);\n    this.setState({ isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const showResetButton = sortType !== SortType.NONE || isReversed;\n    const reorderedGoods = getReorderedGoods(\n      goodsFromServer, this.state,\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info', {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => {\n              this.sortByType(SortType.ALPHABET);\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success', {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => {\n              this.sortByType(SortType.LENGTH);\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning', {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={() => {\n              this.reverse();\n            }}\n          >\n            Reverse\n          </button>\n\n          {showResetButton && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.reset();\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {\n              reorderedGoods.map(good => (\n                <li data-cy=\"Good\" key={good}>\n                  {good}\n                </li>\n              ))\n            }\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}